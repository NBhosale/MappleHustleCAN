# Multi-stage production Dockerfile for MapleHustleCAN
FROM python:3.9-slim as base

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    libpq-dev \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN groupadd -r appuser && useradd -r -g appuser appuser

# =============================================================================
# Dependencies stage
# =============================================================================
FROM base as dependencies

# Set work directory
WORKDIR /app

# Copy requirements
COPY requirement.txt .

# Install Python dependencies
RUN pip install --no-cache-dir -r requirement.txt

# =============================================================================
# Security scanning stage
# =============================================================================
FROM dependencies as security-scan

# Install security scanning tools
RUN pip install bandit safety semgrep

# Copy source code
COPY app/ ./app/
COPY alembic/ ./alembic/
COPY alembic.ini .

# Run security scans
RUN bandit -r app/ -f json -o bandit-report.json || true
RUN safety check --json --output safety-report.json || true
RUN semgrep --config=auto app/ --json --output=semgrep-report.json || true

# =============================================================================
# Build stage
# =============================================================================
FROM dependencies as build

# Set work directory
WORKDIR /app

# Copy source code
COPY app/ ./app/
COPY alembic/ ./alembic/
COPY alembic.ini .

# Create necessary directories
RUN mkdir -p logs uploads temp

# Set permissions
RUN chown -R appuser:appuser /app

# =============================================================================
# Production stage
# =============================================================================
FROM python:3.9-slim as production

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PATH="/home/appuser/.local/bin:$PATH"

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    libpq5 \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Set work directory
WORKDIR /app

# Copy Python dependencies from build stage
COPY --from=build /usr/local/lib/python3.9/site-packages /usr/local/lib/python3.9/site-packages
COPY --from=build /usr/local/bin /usr/local/bin

# Copy application code
COPY --from=build --chown=appuser:appuser /app .

# Create necessary directories
RUN mkdir -p logs uploads temp backups && \
    chown -R appuser:appuser /app

# Switch to non-root user
USER appuser

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health/ || exit 1

# Expose port
EXPOSE 8000

# Default command
CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "4"]
