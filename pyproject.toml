[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
  | alembic
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app"]
known_third_party = ["fastapi", "sqlalchemy", "pydantic", "alembic"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "alembic.*",
    "slowapi.*",
    "jose.*",
    "passlib.*",
    "boto3.*",
    "twilio.*",
    "redis.*",
    "celery.*",
    "sentry_sdk.*",
    "psutil.*",
    "locust.*"
]
ignore_missing_imports = true

[tool.pylint]
max-line-length = 88
disable = [
    "C0114",  # missing-module-docstring
    "C0115",  # missing-class-docstring
    "C0116",  # missing-function-docstring
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
    "W0613",  # unused-argument
    "C0103",  # invalid-name
]

[tool.pylint.messages_control]
disable = [
    "C0114",
    "C0115", 
    "C0116",
    "R0903",
    "R0913",
    "W0613",
    "C0103"
]

[tool.bandit]
exclude_dirs = ["tests", "migrations", "alembic"]
skips = ["B101", "B601"]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/alembic/*",
    "*/venv/*",
    "*/env/*",
    "*/__pycache__/*",
    "*/conftest.py",
    "*/test_*.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
    "--color=yes",
    "--durations=10"
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "security: Security tests",
    "load: Load tests",
    "migration: Migration tests",
    "slow: Slow running tests",
    "fast: Fast running tests",
    "auth: Authentication tests",
    "api: API tests",
    "database: Database tests",
    "file_upload: File upload tests",
    "search: Search tests",
    "bulk: Bulk operation tests"
]
